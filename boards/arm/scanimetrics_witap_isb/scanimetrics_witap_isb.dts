/*
 * Copyright (c) 2019 Scanimetrics Inc.
 *
 * SPDX-License-Identifier: Apache-2.0
 */

/*
 *
 *  See this guide for device tree info
 *  https://docs.zephyrproject.org/latest/guides/dts/index.html
 *
 *  The device tree specification is here:
 *  https://www.devicetree.org/specifications/
 *
 */

/dts-v1/;
#include <atmel/samd21.dtsi>

/ {
	model = "Scanimetrics WiTAP ISB";
	compatible = "scanimetrics,witap_isb", "atmel,samd21g18a", "atmel,samd21";

	chosen {
		zephyr,console = &sercom2;
		zephyr,shell-uart = &sercom2;
		zephyr,sram = &sram0;
		zephyr,flash = &flash0;
		zephyr,code-partition = &code_partition;
	};

	/* These aliases are provided for compatibility with samples */
	aliases {
		led0 = &led0;
		led1 = &led1;
		led2 = &led2;
	};

	led-pins {
		compatible = "gpio-leds";
		led0: led_0 {
			gpios = <&porta 20 (GPIO_ACTIVE_HIGH)>;
			label = "Red";
		};
		led1: led_1 {
			gpios = <&porta 19 (GPIO_ACTIVE_HIGH)>;
			label = "Green";
		};
		led2: led_2 {
			gpios = <&porta 21 (GPIO_ACTIVE_HIGH)>;
			label = "Blue";
		};
	};

	enable-pins {
		compatible = "gpio";
		sensor1: pa6 {
			gpios = <&porta 6 (GPIO_ACTIVE_HIGH)>;
			label = "sensor-en1";
		};
		sensor2: pa2 {
			gpios = <&porta 2 (GPIO_ACTIVE_HIGH)>;
			label = "sensor-en2";
		};
	};

	gps-pins {
		compatible = "gpio";
		gpsreset: pb8 {
			gpios = <&portb 8 (GPIO_ACTIVE_LOW)>;
			label = "gps-reset";
		};
		gpsextint: pb9 {
			gpios = <&portb 9 (GPIO_ACTIVE_LOW)>;
			label = "gps-extint";
		};
		gpstimepulse: pa27 {
			gpios = <&porta 27 (GPIO_ACTIVE_HIGH)>;
			label = "gps-timepulse";
		};
		gpssafeboot: pa28 {
			gpios = <&porta 28 (GPIO_ACTIVE_LOW)>;
			label = "gps-safeboot";
		};
		gpsrxd: pb22 {
			gpios = <&portb 22 (GPIO_ACTIVE_HIGH)>;
			label = "gps-rxd";
		};
	};

	host-pins {
		compatible = "gpio";
		hostint1: pa10 {
			gpios = <&porta 10 (GPIO_ACTIVE_HIGH)>;
			label = "host-int1";
		};
		hostint2: pa11 {
			gpios = <&porta 11 (GPIO_ACTIVE_HIGH)>;
			label = "host-int2";
		};
	};

	interrupt-pins {
		compatible = "gpio";
		imuint1: pa15 {
			gpios = <&porta 15 (GPIO_ACTIVE_HIGH)>;
			label = "imu-int1";
		};
		imuint2: pa14 {
			gpios = <&porta 14 (GPIO_ACTIVE_HIGH)>;
			label = "imu-int2";
		};
		alsalert: pa16 {
			gpios = <&porta 16 (GPIO_ACTIVE_HIGH)>;
			label = "als-alert";
		};
		thsalert: pa17 {
			gpios = <&porta 17 (GPIO_ACTIVE_HIGH)>;
			label = "ths-alert";
		};
	};

	unused-pins {
		compatible = "gpio";
		pa3: pa3 {
			gpios = <&porta 3 0>;
			label = "pa3";
		};
		pa12: pa12 {
			gpios = <&porta 12 0>;
			label = "pa12";
		};
		pa13: pa13 {
			gpios = <&porta 13 0>;
			label = "pa13";
		};
		pa18: pa18 {
			gpios = <&porta 18 0>;
			label = "pa18";
		};
		pb10: pb10 {
			gpios = <&portb 10 0>;
			label = "pb10";
		};
		pb11: pb11 {
			gpios = <&portb 11 0>;
			label = "pb11";
		};
	};
};

&cpu0 {
	clock-frequency = <48000000>;
};

//  SERCOM0 is used for board to board communication between ISB and MKR WAN (DOCK)
&sercom0 {
	status = "okay";
	compatible = "atmel,sam0-i2c";
	#address-cells = <1>;
	#size-cells = <0>;
	//  see ZEPHYR_INCLUDE_DT_BINDINGS_I2C_I2C_H_ for frequency defines
	clock-frequency = <I2C_BITRATE_FAST>;
	// interrupts = <9 0>;

	eeprom@54 {
		compatible = "atmel,at24";
		reg = <0x54>;
		label = "EEPROM_SLAVE_0";
		size = <256>;
		pagesize = <16>;
		address-width = <8>;
		timeout = <5>;
	};
};

//  use SERCOM2 as UART for console and USB CDC
&sercom2 {
	status = "okay";
	compatible = "atmel,sam0-uart";
	current-speed = <115200>;
	rxpo = <1>;
	txpo = <0>;
	// interrupts = <11 0>;
};

//  SERCOM3 is the local bus for onboard sensors
&sercom3 {
	status = "okay";
	compatible = "atmel,sam0-i2c";
	//  see zephyr/include/dt-bindings/i2c/i2c.h for device tree frequency defines
	clock-frequency = <I2C_BITRATE_FAST>;
	#address-cells = <1>;
	#size-cells = <0>;
	dma = <0>;
	interrupts = <12 0>;

	ths0: sht3xd@44 {
		compatible = "sensirion,sht3xd";
		label = "SHT3XD";
		reg = <0x44>;
		// alert-gpios = <&porta 17 GPIO_INT_ACTIVE_HIGH>;
	};

	als0: opt3001@45 {
		compatible = "ti,opt3001";
		label = "OPT3001";
		reg = <0x45>;
	};

	bps0: bme280@76 {
        compatible = "bosch,bme280";
        label = "BME280";
        reg = <0x76>;
	};

	imu0: icm20649@68 {
		compatible = "invensense,icm20649";
		label = "ICM20649";
		reg = <0x68>;
		irq-gpios = <&porta 15 0>;
	};
};

//  SERCOM5 is connected to the onboard GPS module
&sercom5 {
	status = "disabled";
	compatible = "atmel,sam0-i2c";
	//  see ZEPHYR_INCLUDE_DT_BINDINGS_I2C_I2C_H_ for frequency defines
	clock-frequency = <I2C_BITRATE_FAST>;
	// label = "I2C_1";
	#address-cells = <1>;
	#size-cells = <0>;
	// interrupts = <14 0>;
};

/*
 *  See this link for additional info on flash partitions
 *  https://github.com/zephyrproject-rtos/zephyr/blob/master/doc/guides/dts/flash_partitions.inc
 *
 *  Note, for some reason, code is not place automatically in the code partition
 *  To do so, you need to ensure that the base address is set in your project config
 *  For example:
 *    CONFIG_FLASH_BASE_ADDRESS=0x2000
 *
 */

&flash0 {
	partitions {
		compatible = "fixed-partitions";
		#address-cells = <1>;
		#size-cells = <1>;

		boot_partition: partition@0 {
			label = "sam-ba";
			reg = <0x00000000 0x2000>;
			read-only;
		};

		code_partition: partition@2000 {
			label = "code";
			reg = <0x2000 0x3c000>;
			read-only;
		};

		/*
		 * The final 16 KiB is reserved for the application
		 * and is used by NFFS if enabled.
		 */
		storage_partition: partition@3e000 {
			label = "storage";
			reg = <0x0003e000 0x00002000>;
		};
	};
};

&usb0 {
	status = "okay";
};

&rtc {
	status = "okay";
	/*  use GCLK4 (xosc32k) as the source for the rtc  */
	/*  RTC clock frequency is defined in soc.h  */
	clock-generator = <4>;
	prescaler = <0>;
	/* RTC uses highest priority interrupt */
	interrupts = <3 0>;
};

&adc {
	status = "okay";
	// interrupts = <19 0>;
};
