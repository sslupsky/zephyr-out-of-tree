/*
 * Copyright (c) 2019 Scanimetrics Inc.
 *
 * SPDX-License-Identifier: Apache-2.0
 */

/*
 *
 *  See this guide for device tree info
 *  https://docs.zephyrproject.org/latest/guides/dts/index.html
 *
 *  The device tree specification is here:
 *  https://www.devicetree.org/specifications/
 *
 */

/dts-v1/;
#include <scanimetrics/samd5xx20.dtsi>
#include <dt-bindings/gpio/gpio.h>
#include <../../modules/hal/atmel/asf/sam0/include/samd51/instance/sercom0.h>
#include <../../modules/hal/atmel/asf/sam0/include/samd51/instance/sercom1.h>
#include <../../modules/hal/atmel/asf/sam0/include/samd51/instance/sercom2.h>
#include <../../modules/hal/atmel/asf/sam0/include/samd51/instance/sercom3.h>
#include <../../modules/hal/atmel/asf/sam0/include/samd51/instance/sercom4.h>
#include <../../modules/hal/atmel/asf/sam0/include/samd51/instance/sercom5.h>
#include <../../modules/hal/atmel/asf/sam0/include/samd51/instance/sercom6.h>
#include <../../modules/hal/atmel/asf/sam0/include/samd51/instance/sercom7.h>

/ {
	model = "Scanimetrics WiTAP ISB V2";
	compatible = "scanimetrics,witap_isb_v2";

	chosen {
		/* console UART can be overridden by CONFIG_UART_CONSOLE_ON_DEV_NAME */
		zephyr,console = &sercom4;
		/* shell UART can be overridden by CONFIG_UART_SHELL_ON_DEV_NAME */
		zephyr,shell-uart = &sercom4;
		zephyr,sram = &sram0;
		zephyr,flash = &flash0;
		zephyr,code-partition = &code_partition;
	};

	/* These aliases are provided for compatibility with samples */
	aliases {
		led-red = &led0;
		led-green = &led1;
		led-blue = &led2;
	};

	led-pins {
		compatible = "gpio-leds";
		led0: led_0 {
			gpios = <&porta 20 (GPIO_ACTIVE_HIGH)>;
			label = "Red";
		};
		led1: led_1 {
			gpios = <&portb 17 (GPIO_ACTIVE_HIGH)>;
			label = "Green";
		};
		led2: led_2 {
			gpios = <&porta 21 (GPIO_ACTIVE_HIGH)>;
			label = "Blue";
		};
	};

	enable-pins {
		compatible = "gpio";
		sensor1: pa6 {
			gpios = <&porta 6 (GPIO_ACTIVE_HIGH)>;
			label = "sensor-en1";
		};
		sensor2: pa2 {
			gpios = <&porta 2 (GPIO_ACTIVE_HIGH)>;
			label = "sensor-en2";
		};
	};

	host-pins {
		compatible = "gpio";
		hostint1: pa10 {
			gpios = <&porta 10 (GPIO_ACTIVE_HIGH)>;
			label = "host-int1";
		};
	};

	interrupt-pins {
		compatible = "gpio";
		imuint1: pa15 {
			gpios = <&porta 15 (GPIO_ACTIVE_HIGH)>;
			label = "imu-int1";
		};
		imuint2: pa14 {
			gpios = <&porta 14 (GPIO_ACTIVE_HIGH)>;
			label = "imu-int2";
		};
		alsalert: pb16 {
			gpios = <&portb 16 (GPIO_ACTIVE_HIGH)>;
			label = "als-alert";
		};
		thsalert: pa19 {
			gpios = <&porta 19 (GPIO_ACTIVE_HIGH)>;
			label = "ths-alert";
		};
	};

	debug-pins {
		compatible = "gpio";
		debug0: debug_0 {
			gpios = <&portb 4 0>;
			label = "DEBUG0";
		};
		debug1: debug_1 {
			gpios = <&portb 5 0>;
			label = "DEBUG1";
		};
		debug2: debug_2 {
			gpios = <&portb 0 0>;
			label = "DEBUG2";
		};
	};

	unused-pins {
		compatible = "gpio";
		pa3: pa3 {
			gpios = <&porta 3 0>;
			label = "pa3";
		};
		pa11: pa11 {
			gpios = <&porta 11 0>;
			label = "pa11";
		};
		// pa12: pa12 {
		// 	gpios = <&porta 12 0>;
		// 	label = "pa12";
		// };
		// pa13: pa13 {
		// 	gpios = <&porta 13 0>;
		// 	label = "pa13";
		// };
		pa18: pa18 {
			gpios = <&porta 18 0>;
			label = "pa18";
		};
		pa27: pa27 {
			gpios = <&porta 27 0>;
			label = "pa27";
		};
		pa28: pa28 {
			gpios = <&porta 28 0>;
			label = "pa28";
		};
		pb4: pb4 {
			gpios = <&portb 4 0>;
			label = "pb4";
		};
		pb5: pb5 {
			gpios = <&portb 5 0>;
			label = "pb5";
		};
		pb6: pb6 {
			gpios = <&portb 6 0>;
			label = "pb6";
		};
		pb7: pb7 {
			gpios = <&portb 7 0>;
			label = "pb7";
		};
		pb10: pb10 {
			gpios = <&portb 10 0>;
			label = "pb10";
		};
		pb11: pb11 {
			gpios = <&portb 11 0>;
			label = "pb11";
		};
		pb12: pb12 {
			gpios = <&portb 12 0>;
			label = "pb12";
		};
		pb13: pb13 {
			gpios = <&portb 13 0>;
			label = "pb13";
		};
		pb14: pb14 {
			gpios = <&portb 14 0>;
			label = "pb14";
		};
		pb15: pb15 {
			gpios = <&portb 15 0>;
			label = "pb15";
		};
		pb30: pb30 {
			gpios = <&portb 30 0>;
			label = "pb30";
		};
		pb31: pb31 {
			gpios = <&portb 31 0>;
			label = "pb31";
		};
	};
};

&cpu0 {
	clock-frequency = <48000000>;
};

//  SERCOM0 is used for board to board communication between ISB and MKR WAN (DOCK)
&sercom0 {
	compatible = "atmel,sam0-i2c";
	#address-cells = <1>;
	#size-cells = <0>;
	//  see ZEPHYR_INCLUDE_DT_BINDINGS_I2C_I2C_H_ for frequency defines
	clock-frequency = <I2C_BITRATE_FAST>;
	dmas = <&dmac 0 SERCOM0_DMAC_ID_TX>, <&dmac 0 SERCOM0_DMAC_ID_RX>;
	dma-names = "tx", "rx";

	eeprom@54 {
		compatible = "atmel,at24";
		reg = <0x54>;
		label = "EEPROM_SLAVE_0";
		size = <256>;
		pagesize = <16>;
		address-width = <8>;
		timeout = <5>;
	};
};

//  SERCOM1 is connected to the onboard GPS module i2c
&sercom1 {
	compatible = "atmel,sam0-i2c";
	//  see ZEPHYR_INCLUDE_DT_BINDINGS_I2C_I2C_H_ for frequency defines
	clock-frequency = <I2C_BITRATE_FAST>;
	// label = "I2C_1";
	#address-cells = <1>;
	#size-cells = <0>;
	dmas = <&dmac 1 SERCOM1_DMAC_ID_TX>, <&dmac 1 SERCOM1_DMAC_ID_RX>;
	dma-names = "tx", "rx";

	samm8q: samm8q@42 {
		compatible = "ublox,m8";
		label = "SAM-M8Q";
		reg = <0x42>;
		extint-gpios = <&portb 9 GPIO_ACTIVE_HIGH>;
		reset-gpios = <&portb 8 GPIO_ACTIVE_LOW>;
		safeboot-gpios = <&portb 22 GPIO_ACTIVE_LOW>;
		timepulse-gpios = <&portb 23 GPIO_ACTIVE_HIGH>;
		rxd-gpios = <&porta 22 GPIO_ACTIVE_HIGH>;
		txready-gpios = <&porta 23 GPIO_ACTIVE_HIGH>;
	};
};

//  SERCOM2 is the onboard internal sensor i2c bus
&sercom2 {
	compatible = "atmel,sam0-i2c";
	//  see zephyr/include/dt-bindings/i2c/i2c.h for device tree frequency defines
	clock-frequency = <I2C_BITRATE_FAST>;
	#address-cells = <1>;
	#size-cells = <0>;
	dmas = <&dmac 2 SERCOM2_DMAC_ID_TX>, <&dmac 2 SERCOM2_DMAC_ID_RX>;
	dma-names = "tx", "rx";

	ths0: sht3xd@44 {
		compatible = "sensirion,sht3xd";
		label = "SHT3XD";
		reg = <0x44>;
		alert-gpios = <&porta 19 GPIO_ACTIVE_HIGH>;
	};

	als0: opt3001@45 {
		compatible = "ti,opt3001-oot";
		label = "OPT3001";
		reg = <0x45>;
		int-gpios = <&portb 16 0>;
	};

	bps0: bme280@76 {
		compatible = "bosch,bme280";
		label = "BME280";
		reg = <0x76>;
	};

	imu0: icm20649@68 {
		compatible = "invensense,icm20649";
		label = "ICM20649";
		reg = <0x68>;
		irq-gpios = <&porta 15 0>, <&porta 14 0>;
	};
};

//  SERCOM3 is the GPS module serial UART
&sercom3 {
	compatible = "atmel,sam0-uart";
	// clocks = <&gclk 0x17>, <&pm 0x20 5>, <&gclk0>;
	// clock-names = "GCLK", "PM", "GEN";
	current-speed = <115200>;
	//  GPS RXD <-- MCU TXD (PAD0)
	txpo = <0>;
	//  GPS TXD --> MCU RXD (PAD1)
	rxpo = <1>;
};

//  SERCOM4 is the Zephyr console UART
&sercom4 {
	compatible = "atmel,sam0-uart";
	// clocks = <&gclk 0x18>, <&pm 0x20 6>, <&gclk0>;
	// clock-names = "GCLK", "PM", "GEN";
	current-speed = <115200>;
	//  CONSOLE TXD <-- MCU TXD (PAD0)
	txpo = <0>;
	//  CONSOLE RXD --> MCU RXD (PAD1)
	// rxpo = <1>;
/*
 * Errata 2.18.19 SERCOM-USART: Overconsumption in Standby mode
 * When SERCOM USART CTRLA.RUNSTDBY= 0 and the Receiver is disabled
 * (CTRLB.RXEN= 0), the clock request to the GCLK generator feeding the SERCOM
 * will stay asserted during Standby mode, leading to unexpected
 * over-consumption.
 *
 * Workaround
 * Configure CTRLA.RXPO and CTRLA.TXPO in order to use the same SERCOM PAD for
 * RX and TX or add an external pull-up on the RX pin.
 */
	rxpo = <0>;
};

//  SERCOM5 is the external sensor i2c bus
&sercom5 {
	compatible = "atmel,sam0-i2c";
	//  see zephyr/include/dt-bindings/i2c/i2c.h for device tree frequency defines
	clock-frequency = <I2C_BITRATE_FAST>;
	#address-cells = <1>;
	#size-cells = <0>;
	dmas = <&dmac 3 SERCOM5_DMAC_ID_TX>, <&dmac 3 SERCOM5_DMAC_ID_RX>;
	dma-names = "tx", "rx";
};

/*
 *  See this link for additional info on flash partitions
 *  https://github.com/zephyrproject-rtos/zephyr/blob/master/doc/guides/dts/flash_partitions.inc
 *
 *  Note, for some reason, code is not place automatically in the code partition
 *  To do so, you need to ensure that the base address is set in your project config
 *  For example:
 *    CONFIG_FLASH_BASE_ADDRESS=0x2000
 *
 */

&flash0 {
	partitions {
		compatible = "fixed-partitions";
		#address-cells = <1>;
		#size-cells = <1>;

		boot_partition: partition@0 {
			label = "uf2";
			reg = <0x00000000 DT_SIZE_K(16)>;
			read-only;
		};

		code_partition: partition@4000 {
			label = "code";
			reg = <0x4000 DT_SIZE_K(1024 - 16 - 32)>;
			read-only;
		};

		/*
		 * 32 KiB is reserved for the application
		 * and is used by LITTLEFS if enabled.
		 */
		storage_partition: partition@f8000 {
			label = "storage";
			reg = <0x000f8000 DT_SIZE_K(32)>;
		};

		/*
		 * MCUBoot partitions
		 */
		image_0_primary_partition: partition@20000 {
			label = "image_0_primary";
			reg = <0x20000 DT_SIZE_K(384)>;
			read-only;
		};

		image_0_secondary_partition: partition@80000 {
			label = "image_0_secondary";
			reg = <0x80000 DT_SIZE_K(384)>;
			read-only;
		};

		scratch_partition:  partition@e0000 {
			label = "scratch";
			reg = <0xe0000 DT_SIZE_K(128)>;
			read-only;
		};
	};
};

&rtc {
	prescaler = <0>;
	clock-frequency = <32768>;
};
